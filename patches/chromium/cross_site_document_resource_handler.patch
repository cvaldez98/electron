From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: deepak1556 <hop2deep@gmail.com>
Date: Mon, 3 Jun 2019 14:07:40 -0700
Subject: cross_site_document_resource_handler.patch

Add a content layer hook to disable CORB for a renderer process,
this patch can be removed once we switch to network service,
where the embedders have a chance to design their URLLoaders.

diff --git a/content/public/browser/content_browser_client.cc b/content/public/browser/content_browser_client.cc
index e1996d41686999298f74dd2da87270ca06faf595..916ec21b1ba5f4ec09359e04cb31058a8043ba90 100644
--- a/content/public/browser/content_browser_client.cc
+++ b/content/public/browser/content_browser_client.cc
@@ -63,6 +63,10 @@ std::unique_ptr<BrowserMainParts> ContentBrowserClient::CreateBrowserMainParts(
   return nullptr;
 }
 
+bool ContentBrowserClient::ShouldBypassCORB(int render_process_id) const {
+  return false;
+}
+
 void ContentBrowserClient::PostAfterStartupTask(
     const base::Location& from_here,
     const scoped_refptr<base::TaskRunner>& task_runner,
diff --git a/content/public/browser/content_browser_client.h b/content/public/browser/content_browser_client.h
index 64f644157d73a9c20f06c8d63722e824f3e2b4d5..df63ec79a4ba042f643dc4b042d89ec5b84960e1 100644
--- a/content/public/browser/content_browser_client.h
+++ b/content/public/browser/content_browser_client.h
@@ -245,6 +245,9 @@ class CONTENT_EXPORT ContentBrowserClient {
   virtual std::unique_ptr<BrowserMainParts> CreateBrowserMainParts(
       const MainFunctionParams& parameters);
 
+  // Electron: Allows bypassing CORB checks for a renderer process.
+  virtual bool ShouldBypassCORB(int render_process_id) const;
+
   // Allows the embedder to change the default behavior of
   // BrowserThread::PostAfterStartupTask to better match whatever
   // definition of "startup" the embedder has in mind. This may be
